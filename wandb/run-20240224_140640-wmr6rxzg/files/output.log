
Training fold 1 for efficientnet_b0
Training fold 2 for efficientnet_b0
Training fold 3 for efficientnet_b0
Training fold 4 for efficientnet_b0
Training fold 5 for efficientnet_b0
/home/edramos/miniconda3/envs/tf/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/edramos/miniconda3/envs/tf/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/edramos/miniconda3/envs/tf/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/edramos/miniconda3/envs/tf/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Test accuracy: 35.000
Confusion Matrix:
 [[4 1 0 0 0 0 0 0 0 3 0]
 [1 4 0 1 0 1 0 0 0 1 0]
 [1 0 0 1 0 0 0 0 0 0 0]
 [2 1 0 0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0 0 4 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [2 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 4 3 0 0]
 [0 0 0 0 0 0 0 0 2 1 0]
 [3 2 0 0 0 2 0 2 1 6 0]
 [0 0 0 0 0 0 0 2 0 0 1]]
Test Precision: 31.417379
Test Recall: 35.000000
Test F1 Score: 31.710084
Matthews Correlation Coefficient: 23.587256
/home/edramos/miniconda3/envs/tf/lib/python3.9/site-packages/torch/cuda/memory.py:282: FutureWarning: torch.cuda.reset_max_memory_allocated now calls torch.cuda.reset_peak_memory_stats, which resets /all/ peak memory stats.
  warnings.warn(